/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package archivos;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author 
 */
public class vista extends javax.swing.JFrame {

    DefaultListModel directorio;
    DefaultListModel arch;
    DefaultListModel oculto;

    public vista() {
        initComponents();       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel4 = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        lblFechaUltimaModificacion = new javax.swing.JLabel();
        lblRutaAbsoluta = new javax.swing.JLabel();
        lblTamnoEnKb = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDirec = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listArc = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listOcu = new javax.swing.JList();
        btnRegresar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuItemNuevo = new javax.swing.JMenuItem();
        menuItemCrearCarpeta = new javax.swing.JMenuItem();
        menuItemRenombrar = new javax.swing.JMenuItem();
        menuItemEliminar = new javax.swing.JMenuItem();
        menuSalir = new javax.swing.JMenu();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("INGRESAR RUTA");

        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblFechaUltimaModificacion.setText("Fecha de ultima modificacion:");

        lblRutaAbsoluta.setText("Ruta absoluta:");

        lblTamnoEnKb.setText("Tama√±o (Kb): ");

        jLabel1.setText("Directorios");

        listDirec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listDirecMouseClicked(evt);
            }
        });
        listDirec.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDirecValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listDirec);

        jLabel2.setText("Archivos");

        listArc.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listArcValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listArc);

        jLabel3.setText("Ocultos");

        listOcu.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listOcuValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listOcu);

        btnRegresar.setText("REGRESAR");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        menuArchivo.setText("Archivo");

        menuItemNuevo.setText("Nuevo Archivo");
        menuItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNuevoActionPerformed(evt);
            }
        });
        menuArchivo.add(menuItemNuevo);

        menuItemCrearCarpeta.setText("Nueva Carpeta");
        menuItemCrearCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCrearCarpetaActionPerformed(evt);
            }
        });
        menuArchivo.add(menuItemCrearCarpeta);

        menuItemRenombrar.setText("Renombrar");
        menuItemRenombrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemRenombrarActionPerformed(evt);
            }
        });
        menuArchivo.add(menuItemRenombrar);

        menuItemEliminar.setText("Eliminar");
        menuItemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEliminarActionPerformed(evt);
            }
        });
        menuArchivo.add(menuItemEliminar);

        jMenuBar1.add(menuArchivo);

        menuSalir.setText("Salir");
        jMenuBar1.add(menuSalir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(106, 106, 106)
                                        .addComponent(jLabel1)
                                        .addGap(57, 57, 57))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel2)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel3))))
                            .addComponent(lblRutaAbsoluta)
                            .addComponent(lblTamnoEnKb)
                            .addComponent(lblFechaUltimaModificacion))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegresar))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnRegresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBuscar)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(lblRutaAbsoluta)
                .addGap(9, 9, 9)
                .addComponent(lblFechaUltimaModificacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTamnoEnKb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String rutaTexto = txtRuta.getText().trim();
        listarArchivos(rutaTexto);
    }//GEN-LAST:event_btnBuscarActionPerformed
    
    public void listarArchivos(String rutaTexto){
        directorio = new DefaultListModel();
        listDirec.setModel(directorio);

        arch = new DefaultListModel();
        listArc.setModel(arch);

        oculto = new DefaultListModel();
        listOcu.setModel(oculto);
        
        if (!rutaTexto.equals("")) {
            File ruta = new File(rutaTexto);
            if (ruta.exists()) {
                File[] archivos = ruta.listFiles();

                for (File archivo : archivos) {

                    if (archivo.isDirectory()) {
                        if (archivo.isHidden()) {
                            // System.out.println("Ocultos " + archivo.getName());
                            String lista = archivo.getName();
                            oculto.addElement(lista);

                        } else {
                            // System.out.println("Directorios " + archivo.getName());
                            String lista = archivo.getName();
                            directorio.addElement(lista);
                        }

                    } else if (archivo.isFile()) {
                        if (archivo.isHidden()) {
                            //System.out.println("Ocultos " + archivo.getName());
                            String lista = archivo.getName();
                            oculto.addElement(lista);

                        } else {
                            // System.out.println("Archivos " + archivo.getName());
                            String lista = archivo.getName();
                            arch.addElement(lista);
                        }

                    }

                }
            }else{
                JOptionPane.showMessageDialog(this, "Ruta no encontrada");
            }
        }
    }
    
    private void listDirecValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listDirecValueChanged
        
        String elementoSeleccionado = (String) listDirec.getSelectedValue();
        String rutaSeleccionada = txtRuta.getText().trim() + "\\" + elementoSeleccionado;
        mostrarInformacionArchivoSeleccionado(rutaSeleccionada);
        
        listArc.clearSelection();
        listOcu.clearSelection();
        
    }//GEN-LAST:event_listDirecValueChanged

    private void listArcValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listArcValueChanged
       
        String elementoSeleccionado = (String) listOcu.getSelectedValue();
        String rutaSeleccionada = txtRuta.getText().trim() + "\\" + elementoSeleccionado;
        mostrarInformacionArchivoSeleccionado(rutaSeleccionada);
        
        listDirec.clearSelection();
        listOcu.clearSelection();
    }//GEN-LAST:event_listArcValueChanged

    private void listOcuValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listOcuValueChanged
        
        String elementoSeleccionado = (String) listOcu.getSelectedValue();
        String rutaSeleccionada = txtRuta.getText().trim() + "\\" + elementoSeleccionado;
        mostrarInformacionArchivoSeleccionado(rutaSeleccionada);
        
        listArc.clearSelection();
        listDirec.clearSelection();
    }//GEN-LAST:event_listOcuValueChanged

    private void menuItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNuevoActionPerformed
        String nombreArchivo = JOptionPane.showInputDialog("Ingrese el nombre del archivo:");
        String ruta = txtRuta.getText().trim() + "\\" + nombreArchivo;

        File archivoNuevo = new File(ruta);
        if (!archivoNuevo.exists()) {
            try {
                archivoNuevo.createNewFile();
            } catch (IOException ex) {
                System.err.println("Error: archivo no pudo ser creado");
            }
        }
        
        listarArchivos(txtRuta.getText().trim());
    }//GEN-LAST:event_menuItemNuevoActionPerformed

    private void menuItemRenombrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemRenombrarActionPerformed
        
        String archivoSeleccionado = null;
        if(!listArc.isSelectionEmpty()){
            archivoSeleccionado = (String) listArc.getSelectedValue();
        }else if(!listDirec.isSelectionEmpty()) {
            archivoSeleccionado = (String) listDirec.getSelectedValue();
        }else {
            archivoSeleccionado = (String) listOcu.getSelectedValue();
        }
        
        String rutaArchivoSeleccionado = txtRuta.getText().trim() + "\\" + archivoSeleccionado;
        File archivo = new File(rutaArchivoSeleccionado);
        
        String nombreNuevoArchivo = JOptionPane.showInputDialog("Ingrese el nuevo nombre del archivo:");
        String rutaNuevoArchivo = txtRuta.getText().trim() + "\\" + nombreNuevoArchivo;
        File archivoNuevo = new File(rutaNuevoArchivo);
        
        if(archivoNuevo.exists()){
            JOptionPane.showMessageDialog(this, "Ya existe un archivo con ese nombre");            
        }else{
            archivo.renameTo(archivoNuevo);
        }
        
        listarArchivos(txtRuta.getText().trim());
        
    }//GEN-LAST:event_menuItemRenombrarActionPerformed

    private void menuItemCrearCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCrearCarpetaActionPerformed
        String nombreDirectorio = JOptionPane.showInputDialog("Ingresa el nombre de la nueva carpeta");
        String ruta = txtRuta.getText().trim() + "\\" + nombreDirectorio;
        File directorio = new File(ruta);
        if(directorio.exists()){
            JOptionPane.showMessageDialog(this, "El directorio ya existe en la ruta");            
        }else{
            directorio.mkdir();
        }
        listarArchivos(txtRuta.getText().trim());
    }//GEN-LAST:event_menuItemCrearCarpetaActionPerformed

    private void menuItemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEliminarActionPerformed
       /* String archivoSeleccionado = null;
        boolean isValid = true;
        
        if(!listArc.isSelectionEmpty()){
            archivoSeleccionado = (String) listArc.getSelectedValue();
        }else if(!listDirec.isSelectionEmpty()) {
            archivoSeleccionado = (String) listDirec.getSelectedValue();
        }else if(!listOcu.isSelectionEmpty()){
            archivoSeleccionado = (String) listOcu.getSelectedValue();
        }else {
            isValid = false;
            JOptionPane.showMessageDialog(this, "No se ha seleccionado un archivo para eliminar");
        }
        
        if(isValid){
        
            String rutaArchivoSeleccionado = txtRuta.getText().trim() + "\\" + archivoSeleccionado;
            File archivo = new File(rutaArchivoSeleccionado);
            archivo.delete();
            listarArchivos(txtRuta.getText().trim());                
        }*/
       String eliminarRuta=txtRuta.getText().trim();
     
              eliminar(eliminarRuta); 
              hayCarpetas(eliminarRuta);
       
    }//GEN-LAST:event_menuItemEliminarActionPerformed

    public String eliminar(String ruta) {
        if (ruta != null) {
            eliminar(hayCarpetas(ruta));
            File folder = new File(ruta);
            for (File file : folder.listFiles()) {
                if (file.isFile())
                    file.delete();
            }
            while (hayCarpetas(ruta) != null) 
                eliminar(hayCarpetas(ruta));
            folder.delete();
            return ruta;
        }
        return ruta;
    }

    public String hayCarpetas(String ruta) {
        File folder = new File(ruta);
        for (File file : folder.listFiles()) {
            if (file.isDirectory()) 
                return file.getPath();
        }
        return null;
    }
    private void listDirecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDirecMouseClicked
        if (evt.getClickCount()==2){
          String ruta = txtRuta.getText().trim() + "\\"+listDirec.getSelectedValue();
          txtRuta.setText(ruta);
          java.awt.event.ActionEvent ru = null;
          btnBuscarActionPerformed(ru);
        }
                
    }//GEN-LAST:event_listDirecMouseClicked

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        
      String regresar=null;
       for(int re=txtRuta.getText().trim().length()-1;re>2;re--){
         if((int)txtRuta.getText().trim().charAt(re)==92){
             regresar=txtRuta.getText().trim().substring(0,re);
             txtRuta.setText(regresar);
             btnBuscarActionPerformed(evt);
           break;  
         }   
        }
    }//GEN-LAST:event_btnRegresarActionPerformed

    public void mostrarInformacionArchivoSeleccionado(String rutaSeleccionada) {
        //obtengo la fecha de ultima modificacion
        File archivoSeleccionado = new File(rutaSeleccionada);
        long fechaMilisegundos = archivoSeleccionado.lastModified();
        Date fecha = new Date(fechaMilisegundos);
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        String fechaTexto = formato.format(fecha);
        lblFechaUltimaModificacion.setText("Fecha de ultima modificacion: " + fechaTexto);

        //obtengo la ruta absoluta
        String rutaAbsoluta = archivoSeleccionado.getAbsolutePath();
        lblRutaAbsoluta.setText("Ruta absoluta: " + rutaAbsoluta);

        //obtengo el tamano del archivo en kb
        long tamanoEnBytes = archivoSeleccionado.length();
        long tamanoEnKBytes = tamanoEnBytes / 1024l;

        lblTamnoEnKb.setText("Tama√±o (Kb): " + tamanoEnKBytes);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblFechaUltimaModificacion;
    private javax.swing.JLabel lblRutaAbsoluta;
    private javax.swing.JLabel lblTamnoEnKb;
    private javax.swing.JList listArc;
    private javax.swing.JList listDirec;
    private javax.swing.JList listOcu;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuItem menuItemCrearCarpeta;
    private javax.swing.JMenuItem menuItemEliminar;
    private javax.swing.JMenuItem menuItemNuevo;
    private javax.swing.JMenuItem menuItemRenombrar;
    private javax.swing.JMenu menuSalir;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables
}
